[versions]
agp = "8.5.0"
coreKtx = "1.6.1"
coreTesting = "2.2.0"
coreTestingVersion = "2.1.0"
hamcrestLibrary = "2.2"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
lifecycleViewmodel = "2.8.3"
material = "1.12.0"
activity = "1.9.0"
constraintlayout = "2.1.4"
mockitoCore = "4.3.1"
mockwebserver = "4.9.0"
powermockModuleJunit4 = "2.0.9"
retrofit = "2.9.0"
robolectric = "4.7"
robolectricVersion = "4.5.1"

[libraries]
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
core = { module = "androidx.test:core", version.ref = "coreKtx" }
core-ktx = { module = "androidx.test:core-ktx", version.ref = "coreKtx" }
core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
core-testing-v210 = { module = "androidx.arch.core:core-testing", version.ref = "coreTestingVersion" }
espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "espressoCore" }
hamcrest-library = { module = "org.hamcrest:hamcrest-library", version.ref = "hamcrestLibrary" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata", version.ref = "lifecycleViewmodel" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewmodel" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermockModuleJunit4" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermockModuleJunit4" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
robolectric-v451 = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
rules = { module = "androidx.test:rules", version.ref = "coreKtx" }
runner = { module = "androidx.test:runner", version.ref = "coreKtx" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }

